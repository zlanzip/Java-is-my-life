<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

    <springProperty scope="context" name="loggingPath" source="logging.path" defaultValue="logs"/>
    <springProperty scope="context" name="loggingFile" source="logging.file" defaultValue="app.log"/>
    <springProperty scope="context" name="rootLevel" source="logging.root.level" defaultValue="INFO"/>
    <springProperty scope="context" name="patternConsole" source="logging.pattern.console"
                    defaultValue="%d{HH:mm:ss.SSS} [%.20thread] %-5level %.30logger - %msg%n"/>
    <springProperty scope="context" name="patternFile" source="logging.pattern.file"
                    defaultValue="%d{HH:mm:ss.SSS} [%.20thread] %-5level %.30logger - %msg%n"/>
    <springProperty scope="context" name="fullPatternFile" source="logging.pattern.file"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} [%.20thread] %-5level %.30logger - %msg%n"/>

    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印错误日志 -->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${loggingPath}/error/${loggingFile}</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${patternFile}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${loggingPath}/error/${loggingFile}.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>20</maxHistory>
        </rollingPolicy>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${loggingPath}/${loggingFile}</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${patternFile}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${loggingPath}/${loggingFile}.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>20</maxHistory>
        </rollingPolicy>
    </appender>

    <appender name="TIME_CONSUME_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${loggingPath}/time_consume.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${loggingPath}/time_consume.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>20</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${fullPatternFile}</pattern>
        </encoder>
    </appender>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${patternConsole}</Pattern>
        </encoder>
    </appender>

    <logger name="TimeLogger" additivity="false">
        <level value="info"/>
        <appender-ref ref="TIME_CONSUME_FILE"/>
    </logger>

    <!--关闭jxls的警告日志-->
    <logger name="org.apache.commons.jexl2.JexlEngine" level="OFF"/>

    <!--log4jdbc 配置-->
    <!--jdbc.sqlonly : 仅记录 SQL-->
    <logger name="jdbc.connection" level="OFF" />
    <!--jdbc.audit ：记录除了 ResultSet 之外的所有 JDBC 调用信息，会产生大量的记录，有利于调试跟踪具体的 JDBC 问题-->
    <logger name="jdbc.audit" level="OFF" />
    <!--jdbc.resultset ：会产生更多的记录信息，因为记录了 ResultSet 的信息-->
    <logger name="jdbc.resultset" level="OFF" />
    <!--jdbc.connection ：记录连接打开、关闭等信息，有利于调试数据库连接相关问题-->
    <logger name="jdbc.sqlonly" level="OFF" />
    <!--jdbc.sqltiming ：记录 SQL 以及耗时信息-->
    <logger name="jdbc.sqltiming" level="INFO" />
    <!--关闭debug,否则 org.apache.commons.beanutils.ConvertUtilsBean.convert(java.lang.String, java.lang.Class<?>)方法报错-->
    <logger name="org.apache.commons.beanutils" level="INFO" />

    <root level="${rootLevel}">
        <springProfile name="wlNewtest,local,dev,wlDev,wlTest,missy,test,wl,sunll,cdk,newtest">
            <appender-ref ref="CONSOLE"/>
        </springProfile>
        <appender-ref ref="FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>
</configuration>